@model List<SubRipAdjuster.Models.ArquiveHistory>

@{
    ViewBag.Title = "SubRipHistory";
}
@{
    if (!object.ReferenceEquals(null, ViewData.ModelState["Error"]))
    {
        <br />
        <div class="alert alert-danger alert-dismissible">
            <button type="button" class="close" data-dismiss="alert">
                <span aria-hidden="true">&times;</span>
                <span class="sr-only">Close</span>
            </button>
            @Html.ValidationMessage("Error")
        </div>
    }

    if (!object.ReferenceEquals(null, ViewData.ModelState["Sucesso"]))
    {
        <br />
        <div class="alert alert-success alert-dismissible">
            <button type="button" class="close" data-dismiss="alert">
                <span aria-hidden="true">&times;</span>
                <span class="sr-only">Close</span>
            </button>
            @Html.ValidationMessage("Sucesso")
        </div>
    }

}

<h2>Historico de arquivos SubRip</h2>


@using (Html.BeginForm("SubRipHistory", "SubRip", FormMethod.Post, new
{
    enctype = "multipart/form-data"
}))
{
    @Html.AntiForgeryToken()

    <table class="table table-striped table-hover">
        <thead class="thead-dark">
            <tr>
                <th scope="col">Insert Data </th>
                <th scope="col">File Name</th>
                <th scope="col">Milliseconds</th>
                <th scope="col">Download</th>
            </tr>
        </thead>

        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <th scope="row">@Html.DisplayFor(modelItem => item.InsertDate) </th>
                    <td>@Html.DisplayFor(modelItem => item.ArquiveName)</td>
                    <td>@Html.DisplayFor(modelItem => item.Ms)</td>
                    <td>@Html.ActionLink("Download", "SubRipHistory", "SubRip", new { id = item.Id }, null)</td>
                </tr>
            }
        </tbody>
    </table>
}

<div>
    @Html.ActionLink("Back to List", "SubRipForm")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
